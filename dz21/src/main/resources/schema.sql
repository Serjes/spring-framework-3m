DROP TABLE IF EXISTS acl_class;
DROP TABLE IF EXISTS acl_sid;
DROP TABLE IF EXISTS acl_object_identity;
DROP TABLE IF EXISTS acl_entry;
-- CREATE TABLE acl_class(
-- -- 	id bigint generated by default as identity(start with 100) not null primary key,
--   ID INT AUTO_INCREMENT(1,1) NOT NULL PRIMARY KEY,
--   CLASS VARCHAR(255) NOT NULL ,
-- -- 	class varchar_ignorecase(100) not null,
-- 	constraint unique_uk_2 unique(class)
-- );
CREATE TABLE acl_class (
        id BIGSERIAL NOT NULL PRIMARY KEY,
        class VARCHAR NOT NULL,
        CONSTRAINT UNIQUE_UK_2 UNIQUE(class)
    );
CREATE TABLE acl_sid (
        id BIGSERIAL NOT NULL PRIMARY KEY,
        principal BOOLEAN NOT NULL,
        sid VARCHAR(100) NOT NULL,
        CONSTRAINT UNIQUE_UK_1 UNIQUE(sid,principal)
    );
 CREATE TABLE acl_object_identity (
        id BIGSERIAL NOT NULL PRIMARY KEY,
        object_id_class BIGINT NOT NULL,
        object_id_identity BIGINT NOT NULL,
        owner_sid BIGINT,
        parent_object BIGINT,
        entries_inheriting BOOLEAN NOT NULL,
        CONSTRAINT UNIQUE_UK_3 UNIQUE(object_id_class,object_id_identity), CONSTRAINT FOREIGN_FK_1 FOREIGN KEY(parent_object) REFERENCES ACL_OBJECT_IDENTITY(id), CONSTRAINT FOREIGN_FK_2 FOREIGN KEY(object_id_class) REFERENCES ACL_CLASS(id), CONSTRAINT FOREIGN_FK_3 FOREIGN KEY(owner_sid) REFERENCES ACL_SID(id)
    );

CREATE TABLE ACL_ENTRY(
        id BIGSERIAL NOT NULL PRIMARY KEY,
        acl_object_identity BIGINT NOT NULL,
        sid BIGINT NOT NULL,
        mask INTEGER NOT NULL,
        ace_order INT NOT NULL,
        granting BOOLEAN NOT NULL,
        audit_success BOOLEAN NOT NULL,
        audit_failure BOOLEAN NOT NULL,
        CONSTRAINT UNIQUE_UK_4 UNIQUE(acl_object_identity,ace_order), CONSTRAINT FOREIGN_FK_4 FOREIGN KEY(acl_object_identity) REFERENCES ACL_OBJECT_IDENTITY(id), CONSTRAINT FOREIGN_FK_5 FOREIGN KEY(sid) REFERENCES ACL_SID(id)
    );