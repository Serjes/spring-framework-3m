DROP TABLE IF EXISTS acl_class CASCADE;
DROP TABLE IF EXISTS acl_sid CASCADE;
DROP TABLE IF EXISTS acl_object_identity CASCADE;
DROP TABLE IF EXISTS acl_entry CASCADE;

-- CREATE TABLE acl_class(
-- -- 	id bigint generated by default as identity(start with 100) not null primary key,
--   ID INT AUTO_INCREMENT(1,1) NOT NULL PRIMARY KEY,
--   CLASS VARCHAR(255) NOT NULL ,
-- -- 	class varchar_ignorecase(100) not null,
-- 	constraint unique_uk_2 unique(class)
-- );
-- CREATE TABLE acl_class (
--         id BIGSERIAL NOT NULL PRIMARY KEY,
--         class VARCHAR NOT NULL,
--         CONSTRAINT UNIQUE_UK_2 UNIQUE(class)
--     );
-- CREATE TABLE acl_sid (
--         id BIGSERIAL NOT NULL PRIMARY KEY,
--         principal BOOLEAN NOT NULL,
--         sid VARCHAR(100) NOT NULL,
--         CONSTRAINT UNIQUE_UK_1 UNIQUE(sid,principal)
--     );
--  CREATE TABLE acl_object_identity (
--         id BIGSERIAL NOT NULL PRIMARY KEY,
--         object_id_class BIGINT NOT NULL,
--         object_id_identity BIGINT NOT NULL,
--         owner_sid BIGINT,
--         parent_object BIGINT,
--         entries_inheriting BOOLEAN NOT NULL,
--         CONSTRAINT UNIQUE_UK_3 UNIQUE(object_id_class,object_id_identity), CONSTRAINT FOREIGN_FK_1 FOREIGN KEY(parent_object) REFERENCES ACL_OBJECT_IDENTITY(id), CONSTRAINT FOREIGN_FK_2 FOREIGN KEY(object_id_class) REFERENCES ACL_CLASS(id), CONSTRAINT FOREIGN_FK_3 FOREIGN KEY(owner_sid) REFERENCES ACL_SID(id)
--     );
--
-- CREATE TABLE ACL_ENTRY(
--         id BIGSERIAL NOT NULL PRIMARY KEY,
--         acl_object_identity BIGINT NOT NULL,
--         sid BIGINT NOT NULL,
--         mask INTEGER NOT NULL,
--         ace_order INT NOT NULL,
--         granting BOOLEAN NOT NULL,
--         audit_success BOOLEAN NOT NULL,
--         audit_failure BOOLEAN NOT NULL,
--         CONSTRAINT UNIQUE_UK_4 UNIQUE(acl_object_identity,ace_order), CONSTRAINT FOREIGN_FK_4 FOREIGN KEY(acl_object_identity) REFERENCES ACL_OBJECT_IDENTITY(id), CONSTRAINT FOREIGN_FK_5 FOREIGN KEY(sid) REFERENCES ACL_SID(id)
--     );


create table acl_sid(
  id bigserial not null primary key,
  principal boolean not null,
  sid varchar(100) not null,
  constraint unique_uk_1 unique(sid,principal));

create table acl_class(
  id bigserial not null primary key,
  class varchar(100) not null,
  constraint unique_uk_2 unique(class));

create table acl_object_identity(
  id bigserial primary key,
  object_id_class bigint not null,
  object_id_identity bigint not null,
  parent_object bigint,
  owner_sid bigint,
  entries_inheriting boolean not null,
  constraint unique_uk_3 unique(object_id_class,object_id_identity),
  constraint foreign_fk_1 foreign key(parent_object) references acl_object_identity(id),
  constraint foreign_fk_2 foreign key(object_id_class) references acl_class(id),
  constraint foreign_fk_3 foreign key(owner_sid) references acl_sid(id));

create table acl_entry(
  id bigserial primary key,
  acl_object_identity bigint not null,
  ace_order int not null,
  sid bigint not null,
  mask integer not null,
  granting boolean not null,
  audit_success boolean not null,
  audit_failure boolean not null,
  constraint unique_uk_4 unique(acl_object_identity,ace_order),
  constraint foreign_fk_4 foreign key(acl_object_identity)
      references acl_object_identity(id),
  constraint foreign_fk_5 foreign key(sid) references acl_sid(id));

INSERT INTO acl_sid (id, principal, sid) VALUES
  (1, FALSE, 'ROLE_LIBRARIAN'),
  (2, FALSE, 'ROLE_HUMOR'),
  (3, FALSE, 'ROLE_DETECTIVE');

INSERT INTO acl_class (id, class) VALUES
  (1, 'ru.otus.dz21.domain.Genre');

INSERT INTO acl_object_identity
  (id, object_id_class, object_id_identity,
  parent_object, owner_sid, entries_inheriting)
  VALUES
  (1, 1, 1, NULL, 1, FALSE ),
  (2, 1, 2, NULL, 1, FALSE );

INSERT INTO acl_entry
  (id, acl_object_identity, ace_order,
  sid, mask, granting, audit_success, audit_failure)
  VALUES
  (1, 1, 1, 2, 1, TRUE , TRUE , TRUE ),
  (2, 2, 1, 3, 1, TRUE , TRUE , TRUE );
